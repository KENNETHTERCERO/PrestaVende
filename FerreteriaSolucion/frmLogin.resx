<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        la+WHMF+ls46G6A4VmgCPdAakWuYyTSfUmCFHxy//iHAAUqujR3CJdFgTeBlAzkC4TfHClWToxkcapgZ
        tV5grs3NY6HwiePXPwQYr1j5VgsnRePUdwwC7DKJFRqLaHCIBgU6ARU8xGuCmYgV1PMkn/hV/fEgQIuV
        L0gO1YbaVCZqIpW/5xdBG81WBJERudZzCtxNR2AP9zucxC3gWX84fv1CgH7KVjBxiFcf3XIuh32GY5qt
        CGIjsvcUuF15RXYhj+hikq3AR45fvxCgxconDvHSxvTtDRMrtEtIoGhQ4E5lt/EXtu14vnL8+oMArVvB
        RCFe+pi+TfwoOGYUQ4E84eDQSoGHPaNALx5gONDIPFsx/I084yfHrzcECNo4UjTytVj59vGVoDZLtwTM
        FXrOmmOFvhIYkbUUyBYMH85wKH8A4HvBBlZzLGJWDB2/QWdHWtka1oEuSqRNkCTLMTJJdKenLqCqkXHK
        VrAidtBLR79Gxmpi+mrZQA/dHQbpwnFABRvpFTZcq4m36csNHm3n+D0LKaCJNUy2uDl8O8+DEvYeC1iN
        hg6QFaoXKyFU53NfiBr6Woy7a2Ir+3TtB8mkPwGgkgJDDxGkG/1DSNFIAZWGO0xhMOk0sFU4BdS2l87+
        Hu1+bKKACqAjgyxGCVZQ4HDh6Ax9LKasaqKQ8lapWiHA1TzngzwCElGBFcUG/byOlYg+ASQkASQkASQk
        ASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQk
        ASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQk
        ASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQkASQk
        ASQkASQkASQkASQkASQkASQcECAoxdS+CVBPkxRUgqLOCgGqaJCSSlBUWCFAJY1SUgmKSms9gCRAu+4B
        yqiTkkpQ7LZCgF2USkklKH6xNgfYKiWVkGgi39ocoEDKKiFRbY0ADWySskpI7OMna6bgNZRLaSUg8q31
        ALCO7VJaCYjV1lYBUMJaKa2EQz2rabJGgBqWSX9AwmEnK627g//LNimxBEMu+dYJsIkcKbGEQh2LqLFO
        gFo+kgbhhEI+X4KdiKAl/CCllkD4sNm8Z50AhbwhJ4IJg6282axNOzGB77FOSi5BsIDvmz/YIcAvvCnj
        AxMC23itJcbDXlTw66yU0mvzCDKPNS1fkm2dupdKTiVNyrBNYw13Udbyxe6+gH/zvpRgm0YVT7G59atd
        AlTyBBukFNsw3uW90K/JthvYSRknkiEl2SaxglvZ6Y4A8BNdmEBASrPNoYhbWKH9yQkBGvme4Rws5dnG
        UEU2b+gX8smOmqpkFaMYImXahlDH35hFvf7nZIfNlbGWsfSXcm0jaOQ5sqkyViQ7brKIPMbQT8q2DaCB
        l7mPvaKqZBfNbmMFI+RA4HvU8BT3t5p+vCMAFJHLIEbIFYGPUc40ZrDPrDrZZfOlLCWVUdI87FNsYgp/
        p8b8gGTXl6hgCdsZRZaUts8Q5DNu4qPwe7uTPbhQA9+ykt4MJkVK3TcoZi53RzbbJ3t0uUIWsZXB9JaS
        9wFqWcQd/MPKfi5vp28juIoLGSQ1EEfU8y0v8Q57rB3u9fw9mUO4mAs4QK4M4oAaVvEaH7LD+inRUFOA
        gziT0xlDptRJjNDEdr5iIZ+xy66yooUsDudUjuUAuns205Awoppd5LGYz9gUbrkXewI0t96dIRzBEYxg
        AN3oSBopcnBw/bQ3UE0Vu9lCHqv5jh1UOFdRLJBCV7oygKHsR2c60ZkMSQMHaKSKCiopZyv5FFPhPm/D
        /wN1nGgHDNRPiQAAAABJRU5ErkJggg==
</value>
  </data>
</root>